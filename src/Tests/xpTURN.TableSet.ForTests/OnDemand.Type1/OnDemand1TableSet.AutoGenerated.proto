// This file was generated by a tool; you should avoid making direct changes.
syntax = "proto3";
package Tests.OnDemand.Type1;

message NumberData
{
    NumberType Id = 1;
    int32 Value = 2;
}

message NumberDataTable
{
    map<NumberType, NumberData> Map = 1;
}

message NumbersData
{
    NumbersType Id = 1;
    repeated sfixed32 Value = 2 [packed = true];
}

message NumbersDataTable
{
    map<NumbersType, NumbersData> Map = 1;
}

message SampleData
{
    sfixed32 SampleId = 1;
    string SampleIdAlias = 2;
    string Alias_1 = 3;
    bytes Bytes_1 = 4;
    int32 Int32_1 = 5;
    int64 Int64_1 = 6;
    uint32 UInt32_1 = 7;
    uint64 UInt64_1 = 8;
    sint32 SInt32_1 = 9;
    sint64 SInt64_1 = 10;
    fixed32 Fixed32_1 = 11;
    fixed64 Fixed64_1 = 12;
    sfixed32 SFixed32_1 = 13;
    sfixed64 SFixed64_1 = 14;
    double Double_1 = 15;
    float Float_1 = 16;
    bool Boolean_1 = 17;
    SAMPLE_NUMBER Enum_1 = 18;
    repeated string ListTextAlias_2 = 19;
    repeated bytes ListBytes_2 = 20;
    repeated int32 ListInt32_2 = 21 [packed = true];
    repeated int64 ListInt64_2 = 22 [packed = true];
    repeated uint32 ListUInt32_2 = 23 [packed = true];
    repeated uint64 ListUInt64_2 = 24 [packed = true];
    repeated sint32 ListSInt32_2 = 25 [packed = true];
    repeated sint64 ListSInt64_2 = 26 [packed = true];
    repeated fixed32 ListFixed32_2 = 27 [packed = true];
    repeated fixed64 ListFixed64_2 = 28 [packed = true];
    repeated sfixed32 ListSFixed32_2 = 29 [packed = true];
    repeated sfixed64 ListSFixed64_2 = 30 [packed = true];
    repeated double ListDouble_2 = 31 [packed = true];
    repeated float ListFloat_2 = 32 [packed = true];
    repeated bool ListBoolean_2 = 33 [packed = true];
    repeated SAMPLE_NUMBER ListEnum_2 = 34 [packed = true];
    float Float_3 = 35;
    bool Boolean_3 = 36;
    SAMPLE_NUMBER Enum_3 = 536870911;
    map<sfixed32, SampleInfo> MapInfo_4 = 37;
    map<sfixed32, string> MapInfo_5 = 38;
    SampleInfo SampleInfo_4 = 39;
    bytes Bytes_4 = 40;
    repeated bytes ListBytes_4 = 41;
}

message SampleDataTable
{
    map<sfixed32, SampleData> Map = 1;
}

message SampleInfo
{
    sfixed32 InfoId = 1;
    DateTime DateTime_1 = 3;
    TimeSpan TimeSpan_1 = 4;
    Uri Uri_1 = 5;
    Guid Guid_1 = 6;
    repeated DateTime DateTime_2 = 7 [packed = true];
    repeated TimeSpan TimeSpan_2 = 8 [packed = true];
    repeated Uri Uri_2 = 9;
    repeated Guid Guid_2 = 10;
}

enum NumberType
{
    NUMBER_NONE = 0;
    STAT_STR_BASE = 1;
    STAT_AGI_BSSE = 2;
    STAT_DEX_BASE = 3;
    STAT_CON_BASE = 4;
    STAT_INT_BASE = 5;
    STAT_WIS_BASE = 6;
    STAT_CHA_BASE = 7;
    STAT_AUR_BASE = 8;
    STAT_LCK_BASE = 9;
    STAT_FAT_BASE = 10;
    STAT_MGC_BASE = 11;
    STAT_WIL_BASE = 12;
    STAT_ESS_BASE = 13;
    STAT_POW_BASE = 14;
}

enum NumbersType
{
    NUMBERS_NONE = 0;
    BASIC_REWARD_ITEMS_WARRIOR = 1;
    BASIC_REWARD_ITEMS_ROGUE = 2;
    BASIC_REWARD_ITEMS_WIZARD = 3;
    BASIC_REWARD_ITEMS_CLERIC = 4;
    BASIC_REWARD_ITEMS_ARCHER = 5;
}

enum SAMPLE_NUMBER
{
    N01_000 = 0;
    N01_001 = 1;
    N01_002 = 2;
    N01_003 = 3;
    N01_004 = 4;
    N01_005 = 5;
    N01_006 = 6;
    N01_007 = 7;
    N01_008 = 8;
    N01_009 = 9;
    N01_010 = 10;
    N02_001 = 11;
    N02_002 = 12;
    N02_003 = 13;
    N02_004 = 14;
    N02_005 = 15;
    N02_006 = 16;
    N02_007 = 17;
    N02_008 = 18;
    N02_009 = 19;
    N02_010 = 20;
}
