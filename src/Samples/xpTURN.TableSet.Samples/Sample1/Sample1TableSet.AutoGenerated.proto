// This file was generated by a tool; you should avoid making direct changes.
syntax = "proto3";
package Samples;

message BoxData
{
    sfixed32 Id = 1;
    string IdAlias = 2;
    sfixed32 NameRefId = 3;
    string NameRefIdAlias = 4;
    repeated BoxSlot List = 5;
}

message BoxDataTable
{
    map<sfixed32, BoxData> Map = 1;
}

message BoxSlot
{
    int32 Slot = 1;
    sfixed32 ItemRefId = 2;
    string ItemRefIdAlias = 3;
}

message ClassData
{
    string Class = 1;
    string Grade = 2;
    string Unit = 3;
}

message DepthDataTable
{
    map<sfixed32, FirstData> Map = 1;
}

message DiceData
{
    sfixed32 Id = 1;
    string IdAlias = 2;
    sfixed32 NameRefId = 3;
    string NameRefIdAlias = 4;
    repeated sfixed32 ListItemRefId = 5 [packed = true];
    repeated string ListItemRefIdAlias = 6;
}

message DiceDataTable
{
    map<sfixed32, DiceData> Map = 1;
}

message FirstData
{
    sfixed32 Id = 1;
    string IdAlias = 2;
    NameCard F1Data = 3;
    ClassData F2Data = 4;
    map<sfixed32, SecondData> SecondMap = 5;
}

message ItemData
{
    sfixed32 Id = 1;
    string IdAlias = 2;
    sfixed32 NameRefId = 3;
    string NameRefIdAlias = 4;
    ItemType Type = 5;
    int32 SlotSize = 6;
    int32 Weight = 7;
}

message ItemDataTable
{
    map<sfixed32, ItemData> Map = 1;
}

message LocaleDataTable
{
    map<int32, TextDataTable> Map = 1;
}

message NameCard
{
    string Name = 1;
    int32 Number = 2;
    string Location = 3;
}

message NumberData
{
    NumberType Id = 1;
    int32 Value = 2;
}

message NumberDataTable
{
    map<NumberType, NumberData> Map = 1;
}

message NumbersData
{
    NumbersType Id = 1;
    repeated sfixed32 Value = 2 [packed = true];
}

message NumbersDataTable
{
    map<NumbersType, NumbersData> Map = 1;
}

message SecondData
{
    sfixed32 Id = 1;
    string Second1 = 3;
    string Second2 = 4;
    NameCard S1Data = 5;
    ClassData S2Data = 6;
    map<sfixed32, ThirdData> ThirdMap = 7;
}

message TextData
{
    int32 Id = 1;
    string IdAlias = 2;
    string Text = 3;
}

message TextDataTable
{
    int32 Id = 1;
    map<int32, TextData> Map = 2;
}

message ThirdData
{
    sfixed32 Id = 1;
    string Third1 = 3;
    string Third2 = 4;
    NameCard T1Data = 5;
    ClassData T2Data = 6;
}

message TranslatedData
{
    sfixed32 Id = 1;
    string IdAlias = 2;
    map<string, string> Map = 3;
}

message TranslatedDataTable
{
    map<sfixed32, TranslatedData> Map = 1;
}

enum ItemType
{
    TypeNone = 0;
    TypePosion = 1;
    TypeEquip = 2;
    TypeVehicle = 3;
}

enum NumberType
{
    NUMBER_NONE = 0;
    STAT_STR_BASE = 1;
    STAT_AGI_BSSE = 2;
    STAT_DEX_BASE = 3;
    STAT_CON_BASE = 4;
    STAT_INT_BASE = 5;
    STAT_WIS_BASE = 6;
    STAT_CHA_BASE = 7;
    STAT_AUR_BASE = 8;
    STAT_LCK_BASE = 9;
    STAT_FAT_BASE = 10;
    STAT_MGC_BASE = 11;
    STAT_WIL_BASE = 12;
    STAT_ESS_BASE = 13;
    STAT_POW_BASE = 14;
}

enum NumbersType
{
    NUMBERS_NONE = 0;
    BASIC_REWARD_ITEMS_WARRIOR = 1;
    BASIC_REWARD_ITEMS_ROGUE = 2;
    BASIC_REWARD_ITEMS_WIZARD = 3;
    BASIC_REWARD_ITEMS_CLERIC = 4;
    BASIC_REWARD_ITEMS_ARCHER = 5;
}

enum SAMPLE_NUMBER
{
    N01_000 = 0;
    N01_001 = 1;
    N01_002 = 2;
    N01_003 = 3;
    N01_004 = 4;
    N01_005 = 5;
    N01_006 = 6;
    N01_007 = 7;
    N01_008 = 8;
    N01_009 = 9;
    N01_010 = 10;
    N02_001 = 11;
    N02_002 = 12;
    N02_003 = 13;
    N02_004 = 14;
    N02_005 = 15;
    N02_006 = 16;
    N02_007 = 17;
    N02_008 = 18;
    N02_009 = 19;
    N02_010 = 20;
}
